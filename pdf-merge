#!/bin/bash
# shopt -s extglob
COVER_INDEX=1
PDF_INDEX=2
OUT_INDEX=3
HELP_INDEX=0

function usage() {
usage="usage: $(basename "$0") [-h] [-c cover] [-o output-file] -p pdf1 pdf2... -- program to merge cover and multiple pdf files to a single pdf file

where:
    -h|--help  show this help message
    -c|--cover  set cover path
    -p|--pdf set pdf file path
    -o|--out set output file path, ignore would used the first pdf path"
echo "$usage"
}

function unknown_err() {
    error="unknown argument $arg"
    echo "$error"
    usage
}

if [[ $# -eq 0 ]]; then
    usage
    exit
fi

for arg in "$@"
do
    case $arg in
        -c|--cover)
            INDEX=COVER_INDEX
            continue
        shift # past argument
        ;;
        -p|--pdf)
            INDEX=PDF_INDEX
            continue
        shift # past argument
        ;;
        -o|--out)
            INDEX=OUT_INDEX
            continue
        shift # past argument
        ;;
        -h|--help)
            INDEX=HELP_INDEX
            usage
            exit
        ;;
        *)
            if [[ $arg =~ ^[\-] ]]; then
                # unknown option
                unknown_err
                exit 1
            fi
        ;;
    esac
    shift # past argument or value

    if [[ "${VALUES[${INDEX}]}" == "" ]]; then
        VALUES[$INDEX]="${arg}"
    else
        VALUES[$INDEX]="${VALUES[${INDEX}]}||${arg}"
    fi
done

COVER="${VALUES[COVER_INDEX]}"
PDF="${VALUES[PDF_INDEX]}"
OUT="${VALUES[OUT_INDEX]}"

if [[ $PDF == "" ]]; then
    echo "pdf must specified"
    usage
    exit 1
fi

# if [[ $OUT == "" ]]; then
#     echo "output file must specified"
#     usage
#     exit 1
# fi

if [[ ! -f "${COVER}" ]]; then
    echo "cover not found: ${COVER}"
    usage
    exit 1
fi

while IFS='||' read -ra PDF; do
    for item in "${PDF[@]}"; do
        if [[ ! -f "${item}" ]]; then
            echo "pdf not found: ${item}"
            usage
            exit 1
        fi
        if [[ $PDF_LIST == "" ]]; then
            PDF_LIST="${item}"
            FIRST_PDF="${item}"
        else
            PDF_LIST="${PDF_LIST} ${item}"
        fi
    done
done <<< "$PDF"

if [[ $OUT == "" ]]; then
    OUT="${FIRST_PDF}"
fi

TMP_NAME="$$"
TMP_PDF="/tmp/${TMP_NAME}.pdf"
TMP_OK_PDF="/tmp/${TMP_NAME}.ok.pdf"

`convert  "${COVER}"  -fill white -undercolor '#0000' -pointsize 15 -gravity north  -annotate +0+5 "${COVER}" "${TMP_PDF}" && pdfunite "${TMP_PDF}" "${PDF_LIST}" "${TMP_OK_PDF}" && cp "${TMP_OK_PDF}" "${OUT}" && rm "${TMP_PDF}" && rm "${TMP_OK_PDF}"`

echo "Ok"